#!/usr/bin/env perl -s

use strict;
use warnings;
use autodie;
use experimentals;
use Config::Tiny;
use Data::Dumper;

our ( $local, $debug, $verbose, $config );

die qq[Usage: gen-cluster-certs [-local,-debug,-verbose] [-config=FILE.CONF]]
  unless scalar @ARGV >= 0;

$config //= qq[$ENV{HOME}/.gen-cluster-certs.conf];

$verbose++ if $debug;

my $version = $ENV{COCKROACH_VERSION};
$version = '2.0' unless defined $version;

my $crdb_bin   = qq[$ENV{HOME}/work/binaries/v$version/cockroach];
my $cmd_prefix = qq[$crdb_bin cert];

$config = Config::Tiny->read($config);

# https://www.cockroachlabs.com/docs/stable/create-security-certificates.html

# file locations
my $ca_key = $ENV{COCKROACH_CA_KEY};
$ca_key = $config->{ca_key}->{location} unless defined $ca_key;
my $certs_dir = $config->{certs_dir}->{location};

# create ca cert

my $create_ca =
  qq[$cmd_prefix $config->{ca}->{cmd} --certs-dir=$certs_dir --ca-key=$ca_key];

say $create_ca if $verbose;
unless ($debug) {

    # You don't need to create a CA.CRT if it already exists
    unless ( -e $ca_key ) {
        say $create_ca if $debug;
        system $create_ca unless $debug;
    }
}

# create node certs

my $nodes = $config->{nodes};
my @nodes = keys %$nodes;
@nodes = grep { $_ !~ /cmd/ } @nodes;

for my $node (@nodes) {

    my $hostname = '';
    if ($local) {
        chomp( my $uname = `uname -n` );
        $hostname = $uname;
    }
    my $create_node =
qq[$cmd_prefix $config->{nodes}->{cmd} $config->{nodes}->{$node} $hostname --certs-dir=$certs_dir --ca-key=$ca_key --overwrite];
    say $create_node if $verbose;
    system $create_node unless $debug;
}

# create client cert

my $users = $config->{client}->{users};

my @users = split /,/, $users;

for my $user (@users) {

    my $create_client =
qq[$cmd_prefix $config->{client}->{cmd} $user --certs-dir=$certs_dir --ca-key=$ca_key];
    say $create_client if $debug;
    system $create_client unless $debug;

}
